# BAMM configuration file for speciation/extinction analysis 
# ==========================================================
#
# Format
# ------
#
#     - Each option is specified as: option_name = option_value
#     - Comments start with # and go to the end of the line
#     - True is specified with "1" and False with "0"


################################################################################
# GENERAL SETUP AND DATA INPUT
################################################################################

modeltype = trait     
# Specify "speciationextinction" or "trait" analysis
                                  
treefile = intree.dated.crossvalidated.occurrencematched.tre
# File name of the phylogenetic tree to be analyzed

traitfile = niche_phylopca_PC1.txt
# File name of the trait to be analyzed -- tab delimited no header

runInfoFilename = run_info_sax_trait.txt
# File name to output general information about this run

sampleFromPriorOnly = 0                 
# Whether to perform analysis sampling from prior only (no likelihoods computed)
# if If 1, run by sampling from the prior only (ignoring likelihood contribution to posterior)
# If 0, run the full analysis.


runMCMC = 1                             
# Whether to perform the MCMC simulation. If runMCMC = 0, the program will only
# check whether the data file can be read and the initial likelihood computed

simulatePriorShifts = 1
# Whether to simulate the prior distribution of the number of shift events,
# given the hyperprior on the Poisson rate parameter. This is necessary to
# compute Bayes factors

loadEventData = 0                       
# Whether to load a previous event data file

# eventDataInfile = event_data_in.txt
# File name of the event data file to load, used only if loadEventData = 1

initializeModel = 1                     
# Whether to initialize (but not run) the MCMC. If initializeModel = 0, the
# program will only ensure that the data files (e.g., treefile) can be read

# Sampling arguments not accepted in trait module -- these are omitted

seed = -1
# Seed for the random number generator. 
# If not specified (or is -1), a seed is obtained from the system clock

overwrite = 1
# If True (1), the program will overwrite any output files in the current
# directory (if present)


################################################################################
# PRIORS -- trait analysis
################################################################################
###############################################

# Prior block chosen by BAMMtools::setBAMMpriors

expectedNumberOfShifts = 1.0

betaInitPrior = 6.6171072327868e-08

betaShiftPrior = 0.0100003695618415

useObservedMinMaxAsTraitPriors = 1

#### End Prior block
######################


# Most of these will be non-functional with chosen prior:

traitPriorMin = 0
# User-defined minimum value for the uniform density on the distribution of
# ancestral character states. Only used if useObservedMinMaxAsTraitPriors = 0.

traitPriorMax = 0
# User-defined maximum value for the uniform density on the distribution of
# ancestral character states. Only used if useObservedMinMaxAsTraitPriors = 0.

betaIsTimeVariablePrior = 1
# Prior (probability) of the time mode being time-variable (vs. time-constant)



################################################################################
# MCMC SIMULATION SETTINGS & OUTPUT OPTIONS
################################################################################
# These are mostly from online documentation example file 

numberOfGenerations = 1000000000
# Number of generations to perform MCMC simulation

mcmcOutfile = mcmc_out.txt
# File name for the MCMC output, which only includes summary information about
# MCMC simulation (e.g., log-likelihoods, log-prior, number of processes)

mcmcWriteFreq = 10000
# Frequency in which to write the MCMC output to a file

eventDataOutfile = event_data.txt
# The raw event data (these are the main results). ALL of the results are
# contained in this file, and all branch-specific speciation rates, shift
# positions, marginal distributions etc can be reconstructed from this output.
# See R package BAMMtools for working with this output

eventDataWriteFreq = 10000
# Frequency in which to write the event data to a file

printFreq = 10000
# Frequency in which to print MCMC status to the screen

acceptanceResetFreq = 10000
# Frequency in which to reset the acceptance rate calculation
# The acceptance rate is output to both the MCMC data file and the screen

outName = sax_final_trait
# Optional name that will be prefixed on all output files (separated with "_")
# If commented out, no prefix will be used


################################################################################
# OPERATORS: MCMC SCALING OPERATORS
################################################################################
# These are from online documentation example file 

updateBetaInitScale = 1
# Scale operator for proportional shrinking-expanding move to update
# initial phenotypic rate for rate regimes

updateBetaShiftScale = 1
# Scale operator for sliding window move to update initial phenotypic rate

updateNodeStateScale = 1
# Scale operator for sliding window move to update ancestral states
# at internal nodes

updateEventLocationScale = 0.05
# Scale parameter for updating LOCAL moves of events on the tree
# This defines the width of the sliding window proposal
 
updateEventRateScale = 4.0
# Scale parameter (proportional shrinking/expanding) for updating
# the rate parameter of the Poisson process 


################################################################################
# OPERATORS: MCMC MOVE FREQUENCIES
################################################################################
# These are from online documentation example file 

updateRateEventNumber = 1
# Relative frequency of MCMC moves that change the number of events

updateRateEventPosition = 1
# Relative frequency of MCMC moves that change the location of an event
# on the tree

updateRateEventRate = 1
# Relative frequency of MCMC moves that change the rate at which events occur 

updateRateBeta0 = 1
# Relative frequency of MCMC moves that change the initial phenotypic rate
# associated with an event

updateRateBetaShift = 1
# Relative frequency of MCMC moves that change the exponential shift parameter
# of the phenotypic rate associated with an event

updateRateNodeState = 25
# Relative frequency of MCMC moves that update the value of ancestral
# character states. You have as many ancestral states as you have
# internal nodes in your tree, so there are a lot of parameters:
# you should update this much more often than you update the event-associated
# parameters.

updateRateBetaTimeMode = 0
# Relative frequency of MCMC moves that flip the time mode
# (time-constant <=> time-variable)

localGlobalMoveRatio = 10.0
# Ratio of local to global moves of events 




################################################################################
# INITIAL PARAMETER VALUES
################################################################################
# These are from online documentation example file 

betaInit = 0.5
# Initial value of the phenotypic evolutionary process at the root of the tree

betaShiftInit = 0
# Initial value of the exponential change parameter for the phenotypic
# evolutionary process at the root of the tree. A value of zero implies
# time-constant rates

initialNumberEvents = 0
# Initial number of non-root processes



################################################################################
# METROPOLIS COUPLED MCMC
################################################################################
# These are from online documentation example file 

numberOfChains = 4
# Number of Markov chains to run

deltaT = 0.01
# Temperature increment parameter. This value should be > 0
# The temperature for the i-th chain is computed as 1 / [1 + deltaT * (i - 1)]

swapPeriod = 1000
# Number of generations in which to propose a chain swap

chainSwapFileName = chain_swap_trait.txt
# File name in which to output data about each chain swap proposal.
# The format of each line is [generation],[rank_1],[rank_2],[swap_accepted]
# where [generation] is the generation in which the swap proposal was made,
# [rank_1] and [rank_2] are the chains that were chosen, and [swap_accepted] is
# whether the swap was made. The cold chain has a rank of 1.
